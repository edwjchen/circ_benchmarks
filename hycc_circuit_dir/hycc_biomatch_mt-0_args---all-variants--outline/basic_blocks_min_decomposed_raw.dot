digraph {
	2 [shape=box,label="ID=2, PostIDom=n/a\l\ldead\l%min = named_addr<int_t (*)(int_t *data, signed int len, signed int stride)> min\l%min_decomposed::1::outer_min = named_addr<int_t (*)[4l]> min_decomposed::1::outer_min\l%0 = compute_addr<int_t *> %min_decomposed::1::outer_min (signed int)0 (signed long int)0\l%1 = div<signed int> (signed int)256 (signed int)64\l%2 = call<int_t> %min %0 %1 (signed int)1\l%min_decomposed::$tmp::return_value_min$1 = named_addr<int_t *> min_decomposed::$tmp::return_value_min$1\lstore %min_decomposed::$tmp::return_value_min$1 %2\ldead\l%min_decomposed::$tmp::return_value_min$11 = named_addr<int_t *> min_decomposed::$tmp::return_value_min$1\l%3 = load<int_t> %min_decomposed::$tmp::return_value_min$11\l%min_decomposed#return_value = named_addr<int_t *> min_decomposed#return_value\lstore %min_decomposed#return_value %3\ldead\ldead\l"];
	3 [shape=box,label="ID=3, PostIDom=1\l\l%memcpy = named_addr<void * (*)(void *dst, const void *src, size_t n)> memcpy\l%min_decomposed::1::1::1::inner_min = named_addr<int_t (*)[64l]> min_decomposed::1::1::1::inner_min\l%4 = compute_addr<int_t *> %min_decomposed::1::1::1::inner_min (signed int)0 (signed long int)0\l%5 = cast<void *> %4\l%min_decomposed::data = named_addr<int_t **> min_decomposed::data\l%6 = load<int_t *> %min_decomposed::data\l%min_decomposed::1::1::i = named_addr<signed int *> min_decomposed::1::1::i\l%7 = load<signed int> %min_decomposed::1::1::i\l%8 = mul<signed int> %7 (signed int)64\l%9 = cast<signed long int> %8\l%10 = compute_addr<int_t *> %6 %9\l%11 = cast<const void *> %10\l%12 = cast<unsigned long int> (signed int)64\l%13 = mul<unsigned long int> %12 (unsigned long int)4\l%14 = call<void *> %memcpy %5 %11 %13\l%min1 = named_addr<int_t (*)(int_t *data, signed int len, signed int stride)> min\l%min_decomposed::1::1::1::inner_min1 = named_addr<int_t (*)[64l]> min_decomposed::1::1::1::inner_min\l%15 = compute_addr<int_t *> %min_decomposed::1::1::1::inner_min1 (signed int)0 (signed long int)0\l%16 = call<int_t> %min1 %15 (signed int)64 (signed int)1\l%min_decomposed::1::outer_min1 = named_addr<int_t (*)[4l]> min_decomposed::1::outer_min\l%min_decomposed::1::1::i1 = named_addr<signed int *> min_decomposed::1::1::i\l%17 = load<signed int> %min_decomposed::1::1::i1\l%18 = cast<signed long int> %17\l%19 = compute_addr<int_t *> %min_decomposed::1::outer_min1 (signed int)0 %18\lstore %19 %16\ldead\ldead\l%min_decomposed::1::1::i2 = named_addr<signed int *> min_decomposed::1::1::i\l%20 = load<signed int> %min_decomposed::1::1::i2\l%21 = add<signed int> %20 (signed int)1\l%min_decomposed::1::1::i3 = named_addr<signed int *> min_decomposed::1::1::i\lstore %min_decomposed::1::1::i3 %21\ljump\l"];
	3 -> 1 [style=dashed];
	1 [shape=box,label="ID=1, PostIDom=2\l\l%min_decomposed::1::1::i4 = named_addr<signed int *> min_decomposed::1::1::i\l%22 = load<signed int> %min_decomposed::1::1::i4\l%23 = div<signed int> (signed int)256 (signed int)64\l%24 = lt<_Bool> %22 %23\l%25 = l_not<_Bool> %24\lbranch %25\l"];
	1 -> 2;
	1 -> 3;
	0 [shape=box,label="ID=0, PostIDom=1\l\l%26 = (signed int)1\l%27 = (unsigned long int)4\l%28 = (signed long int)0\l%29 = (signed int)64\l%30 = (signed int)256\l%31 = (signed int)0\l%min_decomposed::1::1::i5 = named_addr<signed int *> min_decomposed::1::1::i\lstore %min_decomposed::1::1::i5 (signed int)0\ljump\l"];
	0 -> 1;
}
