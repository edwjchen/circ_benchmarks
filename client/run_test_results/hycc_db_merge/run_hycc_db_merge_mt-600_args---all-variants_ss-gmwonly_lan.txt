
LOG: ====================================

LOG: Benchmarking HyCC

LOG: ====================================

LOG: TEST: db_merge
LOG: SELECTION_SCHEME: gmwonly
LOG: MINIMIZATION_TIME: 600
LOG: ARGUMENTS: ['--all-variants']

LOG: ====================================

LOG: RERUN: 0
Using YAO protocol for boolean gates
Loading mpc_main@bool_depth.circ (using GMW for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@bool_depth.circ (using GMW for boolean gates)
Loading mean<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_depth.circ (using GMW for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
LOG: Client load time: 4.928
LOG: Client exec time: 0.997749
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: 49; analysis2: 833; joined: 200; }

LOG: Time / Memory: 6.74 seconds 957572 kB
LOG: RERUN: 1
Using YAO protocol for boolean gates
Loading mpc_main@bool_depth.circ (using GMW for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@bool_depth.circ (using GMW for boolean gates)
Loading mean<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_depth.circ (using GMW for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
LOG: Client load time: 4.93894
LOG: Client exec time: 0.805155
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: 49; analysis2: 833; joined: 200; }

LOG: Time / Memory: 6.53 seconds 957812 kB
LOG: RERUN: 2
Using YAO protocol for boolean gates
Loading mpc_main@bool_depth.circ (using GMW for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@bool_depth.circ (using GMW for boolean gates)
Loading mean<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_depth.circ (using GMW for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
LOG: Client load time: 4.96146
LOG: Client exec time: 0.765452
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: 49; analysis2: 833; joined: 200; }

LOG: Time / Memory: 6.53 seconds 957836 kB
LOG: RERUN: 3
Using YAO protocol for boolean gates
Loading mpc_main@bool_depth.circ (using GMW for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@bool_depth.circ (using GMW for boolean gates)
Loading mean<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_depth.circ (using GMW for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
LOG: Client load time: 4.97083
LOG: Client exec time: 0.809012
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: 49; analysis2: 833; joined: 200; }

LOG: Time / Memory: 6.58 seconds 956928 kB
LOG: RERUN: 4
Using YAO protocol for boolean gates
Loading mpc_main@bool_depth.circ (using GMW for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@bool_depth.circ (using GMW for boolean gates)
Loading mean<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_depth.circ (using GMW for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
LOG: Client load time: 5.03297
LOG: Client exec time: 0.753225
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: 49; analysis2: 833; joined: 200; }

LOG: Time / Memory: 6.61 seconds 957716 kB
LOG: RERUN: 5
Using YAO protocol for boolean gates
Loading mpc_main@bool_depth.circ (using GMW for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@bool_depth.circ (using GMW for boolean gates)
Loading mean<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_depth.circ (using GMW for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
LOG: Client load time: 5.10442
LOG: Client exec time: 0.697783
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: 49; analysis2: 833; joined: 200; }

LOG: Time / Memory: 6.63 seconds 957604 kB
LOG: RERUN: 6
Using YAO protocol for boolean gates
Loading mpc_main@bool_depth.circ (using GMW for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@bool_depth.circ (using GMW for boolean gates)
Loading mean<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_depth.circ (using GMW for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
LOG: Client load time: 5.13033
LOG: Client exec time: 0.729625
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: 49; analysis2: 833; joined: 200; }

LOG: Time / Memory: 6.69 seconds 957880 kB
LOG: RERUN: 7
Using YAO protocol for boolean gates
Loading mpc_main@bool_depth.circ (using GMW for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@bool_depth.circ (using GMW for boolean gates)
Loading mean<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_depth.circ (using GMW for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
LOG: Client load time: 5.13078
LOG: Client exec time: 0.730728
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: 49; analysis2: 833; joined: 200; }

LOG: Time / Memory: 6.72 seconds 957872 kB
LOG: RERUN: 8
Using YAO protocol for boolean gates
Loading mpc_main@bool_depth.circ (using GMW for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@bool_depth.circ (using GMW for boolean gates)
Loading mean<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_depth.circ (using GMW for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
LOG: Client load time: 5.22081
LOG: Client exec time: 0.75024
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: 49; analysis2: 833; joined: 200; }

LOG: Time / Memory: 6.80 seconds 957736 kB
LOG: RERUN: 9
Using YAO protocol for boolean gates
Loading mpc_main@bool_depth.circ (using GMW for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@bool_depth.circ (using GMW for boolean gates)
Loading mean<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_depth.circ (using GMW for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_depth.circ (using GMW for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
LOG: Client load time: 5.14077
LOG: Client exec time: 0.746965
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: 49; analysis2: 833; joined: 200; }

LOG: Time / Memory: 6.71 seconds 957764 kB
