
LOG: ====================================

LOG: Benchmarking HyCC

LOG: ====================================

LOG: TEST: db_merge
LOG: SELECTION_SCHEME: lan_optimized
LOG: MINIMIZATION_TIME: 0
LOG: ARGUMENTS: ['--all-variants']

LOG: ====================================

LOG: RERUN: 0
Using YAO protocol for boolean gates
Loading mean<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_size.circ (using YAO for boolean gates)
Loading mpc_main@bool_size.circ (using YAO for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@arith.circ (using ARITH for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "mean<int32[200],uint32<200>>"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
Arithmetic bit-width: 32bit
LOG: Client load time: 3.87635
LOG: Client exec time: 0.47095
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: -2002950191; analysis2: -1926682018; joined: -1535637771; }

LOG: Time / Memory: 4.94 seconds 744096 kB
LOG: RERUN: 1
Using YAO protocol for boolean gates
Loading mean<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_size.circ (using YAO for boolean gates)
Loading mpc_main@bool_size.circ (using YAO for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@arith.circ (using ARITH for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "mean<int32[200],uint32<200>>"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
Arithmetic bit-width: 32bit
LOG: Client load time: 3.82879
LOG: Client exec time: 0.539855
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: 1178233299; analysis2: -1508880447; joined: 839124073; }

LOG: Time / Memory: 4.96 seconds 744452 kB
LOG: RERUN: 2
Using YAO protocol for boolean gates
Loading mean<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_size.circ (using YAO for boolean gates)
Loading mpc_main@bool_size.circ (using YAO for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@arith.circ (using ARITH for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "mean<int32[200],uint32<200>>"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
Arithmetic bit-width: 32bit
LOG: Client load time: 3.84748
LOG: Client exec time: 0.471642
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: -199598000; analysis2: -2075731776; joined: 1845495017; }

LOG: Time / Memory: 4.92 seconds 744524 kB
LOG: RERUN: 3
Using YAO protocol for boolean gates
Loading mean<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_size.circ (using YAO for boolean gates)
Loading mpc_main@bool_size.circ (using YAO for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@arith.circ (using ARITH for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "mean<int32[200],uint32<200>>"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
Arithmetic bit-width: 32bit
LOG: Client load time: 3.82658
LOG: Client exec time: 0.462397
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: -87389196; analysis2: 994982103; joined: -295958614; }

LOG: Time / Memory: 4.88 seconds 744244 kB
LOG: RERUN: 4
Using YAO protocol for boolean gates
Loading mean<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_size.circ (using YAO for boolean gates)
Loading mpc_main@bool_size.circ (using YAO for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@arith.circ (using ARITH for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "mean<int32[200],uint32<200>>"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
Arithmetic bit-width: 32bit
LOG: Client load time: 3.82938
LOG: Client exec time: 0.477644
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: -2123527174; analysis2: 1057153384; joined: -2002779850; }

LOG: Time / Memory: 4.89 seconds 744268 kB
LOG: RERUN: 5
Using YAO protocol for boolean gates
Loading mean<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_size.circ (using YAO for boolean gates)
Loading mpc_main@bool_size.circ (using YAO for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@arith.circ (using ARITH for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "mean<int32[200],uint32<200>>"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
Arithmetic bit-width: 32bit
LOG: Client load time: 3.81545
LOG: Client exec time: 0.488277
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: 1881966235; analysis2: 279230830; joined: -390593486; }

LOG: Time / Memory: 4.88 seconds 744456 kB
LOG: RERUN: 6
Using YAO protocol for boolean gates
Loading mean<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_size.circ (using YAO for boolean gates)
Loading mpc_main@bool_size.circ (using YAO for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@arith.circ (using ARITH for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "mean<int32[200],uint32<200>>"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
Arithmetic bit-width: 32bit
LOG: Client load time: 3.81412
LOG: Client exec time: 0.481724
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: -286525211; analysis2: -502741307; joined: 370411311; }

LOG: Time / Memory: 4.88 seconds 744472 kB
LOG: RERUN: 7
Using YAO protocol for boolean gates
Loading mean<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_size.circ (using YAO for boolean gates)
Loading mpc_main@bool_size.circ (using YAO for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@arith.circ (using ARITH for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "mean<int32[200],uint32<200>>"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
Arithmetic bit-width: 32bit
LOG: Client load time: 3.815
LOG: Client exec time: 0.528622
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: -293606259; analysis2: -1196241107; joined: 833881471; }

LOG: Time / Memory: 4.93 seconds 744328 kB
LOG: RERUN: 8
Using YAO protocol for boolean gates
Loading mean<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_size.circ (using YAO for boolean gates)
Loading mpc_main@bool_size.circ (using YAO for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@arith.circ (using ARITH for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "mean<int32[200],uint32<200>>"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
Arithmetic bit-width: 32bit
LOG: Client load time: 3.82849
LOG: Client exec time: 0.490114
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: 1228205406; analysis2: -1347227980; joined: -1211105197; }

LOG: Time / Memory: 4.91 seconds 744544 kB
LOG: RERUN: 9
Using YAO protocol for boolean gates
Loading mean<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Loading merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>@bool_size.circ (using YAO for boolean gates)
Loading mpc_main@bool_size.circ (using YAO for boolean gates)
Loading sum_tree<int32[200],int32<200>,int32<1>>@arith.circ (using ARITH for boolean gates)
Loading variance<int32[200],uint32<200>>@bool_size.circ (using YAO for boolean gates)
Merging "merge<int32[200],int32[100],int32[100],uint32<100>,uint32<100>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "mean<int32[200],uint32<200>>"
Merging "mean<int32[200],uint32<200>>" into "mpc_main"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "sum_tree<int32[200],int32<200>,int32<1>>" into "variance<int32[200],uint32<200>>"
Merging "variance<int32[200],uint32<200>>" into "mpc_main"
Arithmetic bit-width: 32bit
LOG: Client load time: 3.7998
LOG: Client exec time: 0.524846
INPUT_A : {db: int32[100]; } = {db: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99]; }
return_value : {analysis1: int32; analysis2: int32; joined: int32; } = {analysis1: -1036160891; analysis2: -539666968; joined: 1520436341; }

LOG: Time / Memory: 4.91 seconds 744328 kB
